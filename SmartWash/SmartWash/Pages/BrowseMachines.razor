@* @page "/" *@
@page "/browse"
@page "/browse/{Type}"
@inject NavigationManager NavigationManager
@using SmartWash.Domain

<MudContainer Class="fullscreen-section colored" MaxWidth="MaxWidth.False" Style="margin-top: -2rem;">
    <MudStack Row="true" Style="width: 100%;" AlignItems="AlignItems.Center" Justify="Justify.SpaceAround">
        <MudContainer Class="center gap-5">
            <MudText Typo="Typo.h4" Align="Align.Left" Style="width:100%;">Choose a date and time</MudText>
            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="5">
                <div style="width: fit-content;">
                    <MudDatePicker @bind-Date="@SelectedDate" Label="Date" PickerVariant="PickerVariant.Static" Orientation="Orientation.Landscape"/>
                </div>
                <MudButtonGroup Variant="Variant.Filled" DisableElevation="true" VerticalAlign="true" OverrideStyles="false">
                    @for (var time = Constants.OpeningTime; time < Constants.ClosingTime; time = time.Add(Constants.SlotDuration))
                    {
                        var t = time;
                        <MudButton Variant="Variant.Filled" Class="py-2" Color="time == SelectedTime ? Color.Primary : Color.Default"
                                   @onclick="() => OnTimeChoose(t)">@t.ToString("hh:mm tt")</MudButton>
                    }
                </MudButtonGroup>
            </MudStack>
        </MudContainer>

        <MudPaper Width="50%" Height="60vh" MaxWidth="500px" Class="scroll-container">
            @for(var i = 0; i < AvailableMachines.Count; i++)
            {
                var machine = AvailableMachines[i];
                <MudCard Class="machine-card cursor-pointer" @onclick="@(() => OnMachineClick(machine))" Outlined="true" Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">Machine @machine.ID</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIcon Icon="@(machine.Type == MachineType.WashingMachine ? Icons.Material.Filled.LocalLaundryService : Icons.Material.Filled.DryCleaning)" Size="Size.Large" Color="Color.Primary"/>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body1">Type: @machine.Type</MudText>
                    </MudCardContent>
                </MudCard>
            }
        </MudPaper>
    </MudStack>
</MudContainer>

@code
{
    [Parameter]
    public string Type { get; set; } // TODO: Make it so that the user can choose between washing and drying machines

    private DateTime? SelectedDate { get; set; } = DateTime.Today;
    private TimeOnly? SelectedTime { get; set; } = Constants.OpeningTime;

    private List<Machine> AvailableMachines { get; set; } = new List<Machine>();

protected override async Task OnInitializedAsync()
    {
        AvailableMachines = new List<Machine>
        {
            new() { ID = 1, Type = MachineType.WashingMachine,  },
            new() { ID = 2, Type = MachineType.WashingMachine,  },
            new() { ID = 3, Type = MachineType.WashingMachine,  },
            new() { ID = 4, Type = MachineType.DryingMachine,  },
            new() { ID = 5, Type = MachineType.WashingMachine,  },
            new() { ID = 6, Type = MachineType.WashingMachine,  },
            new() { ID = 7, Type = MachineType.WashingMachine,  },
            new() { ID = 8, Type = MachineType.WashingMachine,  },
            new() { ID = 9, Type = MachineType.WashingMachine, },
            new() { ID = 10, Type = MachineType.WashingMachine, },
        };
    }

    private void OnTimeChoose(TimeOnly time)
    {
        SelectedTime = time;
    }

private void OnMachineClick(Machine machine)
    {
        NavigationManager.NavigateTo($"/machine/{machine.ID}");
    }

}
