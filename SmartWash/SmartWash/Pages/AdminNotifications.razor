@page "/Account/Admin/Notifications"
@using SmartWash.WebUI.Shared
@using SmartWash.Application.FeedbackSystem
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using SmartWash.Application.UserSystem
@using SmartWash.Domain.Interfaces

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IFeedbackService FeedbackService
@inject IFeedbackRepository FeedbackRepository
@inject IReplyRepository ReplyRepository
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService

<PageTitle>Notifications</PageTitle>

<MudContainer Class="fullscreen-section colored" MaxWidth="MaxWidth.False">

    <AuthorizeView Roles="Admin">


        <h1>Notifications</h1>
        @if (canShow)
        {
            @foreach (var notification in notifications)
            {
                <MudText Align="Align.Center" Typo="Typo.h5">@notification</MudText>
            }
        }
        else
        {
         <MudText Align="Align.Center" Typo="Typo.h5">No notifications</MudText>
            
        }


    </AuthorizeView>

</MudContainer>


@code
{

    private ApplicationUser _admin { get; set; } = new();
    private IList<string> notifications { get; set; } = new List<string>();
    private bool canShow = false;


    protected override async Task OnInitializedAsync()
    {
        var user = await UserService.GetUser();

        var userName = user.UserName;
        canShow = false;

        notifications = _admin.Notifications;

        if (notifications != null)
        {
            canShow = true;
        }

    }


}
