@inherits LayoutComponentBase
@using MudBlazor
@using SmartWash.Domain.Entities
@using Microsoft.AspNetCore.Identity
@using SmartWash.Application.SignalRSystem
@using SmartWash.Application.UserSystem

@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager
@inject ISignalRService SignalRService
@inject IUserService UserService

<PageTitle>Smart Wash</PageTitle>

<SmartWashThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <MudAppBar Fixed="false" Elevation="1">
        <MudSpacer/>
            <MudButton Link="/">Home</MudButton>
            <MudButton Link="/about">About</MudButton>
        <AuthorizeView Roles="Member, Admin">
            <NotAuthorized>
                <MudButton Link="/Account/Login">Login</MudButton>
                <MudButton Link="/Account/SignUp">Sign Up</MudButton>
            </NotAuthorized>
            <Authorized>
                <MudButton Style="margin-right: 20px" OnClick="SignOutUser">Logout</MudButton>
                <AuthorizeView Roles="Member">
                    <Authorized Context="anotherig">
                        <MudMenu>
                            <ActivatorContent>
                                <MudBadge Color="Color.Success" Overlap="true" Bordered="true" Visible="_hasNotification">
                                    <MudAvatar Color="Color.Primary">@context.User.Identity?.Name?[0].ToString().ToUpper()</MudAvatar>
                                </MudBadge>
                            </ActivatorContent>
                            <ChildContent>
                                <MudMenuItem Href="/Account/UserFeedback">Write Feedback</MudMenuItem>
                                    <MudMenuItem OnClick="UserFeedback">View Feedbacks</MudMenuItem>
                                <MudMenuItem Href="/Account/Bookings">Bookings</MudMenuItem>
                                <MudMenuItem>Cameras</MudMenuItem>
                            </ChildContent>
                        </MudMenu>
                    </Authorized>

                    <NotAuthorized Context="haha">
                        <MudMenu>
                            <ActivatorContent>
                                <MudBadge Color="Color.Success" Overlap="true" Bordered="true" Visible="_hasNotification">
                                    <MudAvatar Color="Color.Primary">@context.User.Identity?.Name?[0].ToString().ToUpper()</MudAvatar>
                                </MudBadge>
                            </ActivatorContent>
                            <ChildContent>
                                <MudMenuItem OnClick="AdminFeedback">User Feedbacks</MudMenuItem>
                                <MudMenuItem>Cameras</MudMenuItem>
                                <MudMenuItem Href="/Machines">Machines</MudMenuItem>
                            </ChildContent>
                        </MudMenu>
                    </NotAuthorized>
                </AuthorizeView>
            </Authorized>
        </AuthorizeView>
    </MudAppBar>

    <MudMainContent Style="padding: 0;">
        <MudContainer MaxWidth="MaxWidth.False" Style="padding: 0;">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    private bool _hasNotification;

    public async Task SignOutUser()
    {
        NavigationManager.NavigateTo("/Account/SignOut");
    }

    protected override async Task OnInitializedAsync()
    {
        await SignalRService.StartAsync();

        if(await UserService.GetUserRole() == "Admin")
            SignalRService.OnFeedbackReceived(ReceiveNotification);
    }

    private void AdminFeedback()
    {
        _hasNotification = false;
        NavigationManager.NavigateTo("/Account/AdminFeedbackList");
    }

    private void UserFeedback()
    {
        _hasNotification = false;
        NavigationManager.NavigateTo("/Account/FeedbackList");
    }

    private void ReceiveNotification()
    {
        _hasNotification = true;
        StateHasChanged();
    }

}



